<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>ReportD - {{ .Bucket }}</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio,container-queries"></script>

    <style>
      body {
        max-width: 1200px;
      }
    </style>
  </head>

  <body class="mx-auto p-6 md:p-24 bg-black text-white">

    <header class="mb-10">
      <h1 class="text-3xl font-bold"><a href="/">ReportD</a> - {{ .Bucket }}</h1>
      <div class="hidden" id="name">{{ .Bucket }}</div>
    </header>

    <div class="border-b border-gray-700 pb-2 mb-10">
      <h2 class="text-xl font-medium">Analytics</h2>
      <p class="text-gray-500">Data sent from Web Vitals.</p>
    </div>
    <section id="analytics" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 mb-16">
      <div>
        <h3 class="text-lg font-medium">First Input Delay (FID)</h3>
        <div id="FID" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>

      <div>
        <h3 class="text-lg font-medium">First Contentful Paint (FCP)</h3>
        <div id="FCP" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>

      <div>
        <h3 class="text-lg font-medium">Time to First Byte (TTFB)</h3>
        <div id="TTFB" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>

      <div>
        <h3 class="text-lg font-medium">Largest Contentful Paint (LCP)</h3>
        <div id="LCP" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>

      <div>
        <h3 class="text-lg font-medium">Cumulative Layout Shift (CLS)</h3>
        <div id="CLS" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>

      <div>
        <h3 class="text-lg font-medium">Interactive (INP)</h3>
        <div id="INP" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>
    </section>

    <div class="border-b border-gray-700 pb-2 mb-10">
      <h2 class="text-xl font-medium">Reports</h2>
      <p class="text-gray-500">Data sent from Report-To API.</p>
    </div>
    <section id="reports" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 mb-16">
      <div>
        <h3 class="text-lg font-medium">Total Count</h3>
        <div id="count" data-sparkline="true" data-points="1,2,3,4,5,6,7" data-width="300" data-height="50"></div>
      </div>
    </section>

    <!-- sparklines.js from https://github.com/mitjafelicijan/sparklines -->
    <script src="https://cdn.jsdelivr.net/gh/mitjafelicijan/sparklines/sparklines.min.js" defer></script>
    <script>
      const name = document.querySelector('#name').textContent;
      fetch(`/analytics/${name}`)
        .then(response => response.json())
        .then(data => {
          if (!data) {
            document.querySelector('#analytics').innerHTML = '<p>No data available.</p>';
            return;
          }
          let out = {};
          data.forEach(item => {
            if (!out[item.name]) out[item.name] = [];
            if (item.value > 0) {
              out[item.name].push(item.value);
            }
          });
          Object.keys(out).forEach(key => {
            const chart = document.querySelector(`#${key}`);
            if (!chart) return;

            while (out[key].length < 30) out[key].push(1);

            chart.dataset.points = out[key].join(',');
            chart.dispatchEvent(new Event('update'));
          });
        });
    </script>
    <script>
      fetch(`/reports/${name}`)
        .then(response => response.json())
        .then(data => {
          if (!data) {
            document.querySelector('#reports').innerHTML = '<p>No data available.</p>';
            return;
          }
          let out = {};
          data.forEach(item => {
            if (!out[item.name]) out[item.name] = [];
            if (item.value > 0) {
              out[item.name].push(item.value);
            }
          });
          Object.keys(out).forEach(key => {
            const chart = document.querySelector(`#${key}`);
            if (!chart) return;

            while (out[key].length < 30) out[key].push(1);

            chart.dataset.points = out[key].join(',');
            chart.dispatchEvent(new Event('update'));
          });
        });
    </script>
  </body>

</html>